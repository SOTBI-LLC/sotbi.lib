// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.32.1
// source: counterparty/employee.proto

package counterparty

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmployeesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Employees     []*Employee            `protobuf:"bytes,10,rep,name=employees,proto3" json:"employees,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmployeesResponse) Reset() {
	*x = EmployeesResponse{}
	mi := &file_counterparty_employee_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmployeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmployeesResponse) ProtoMessage() {}

func (x *EmployeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_counterparty_employee_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmployeesResponse.ProtoReflect.Descriptor instead.
func (*EmployeesResponse) Descriptor() ([]byte, []int) {
	return file_counterparty_employee_proto_rawDescGZIP(), []int{0}
}

func (x *EmployeesResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EmployeesResponse) GetEmployees() []*Employee {
	if x != nil {
		return x.Employees
	}
	return nil
}

// Работник
type Employee struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ID             int64                  `protobuf:"varint,1,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	CounterpartyID int64                  `protobuf:"varint,3,opt,name=CounterpartyID,json=counterparty_id,proto3" json:"CounterpartyID,omitempty"` // ID контрагента
	Position       string                 `protobuf:"bytes,6,opt,name=Position,json=position,proto3" json:"Position,omitempty"`                     // Должность
	PositionType   string                 `protobuf:"bytes,9,opt,name=PositionType,json=position_type,proto3" json:"PositionType,omitempty"`        // Тип должности (Основное/По совместительству)
	ContourType    string                 `protobuf:"bytes,12,opt,name=ContourType,json=contour_type,proto3" json:"ContourType,omitempty"`          // Тип контура (Внутренний/Внешний)
	Start          *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=Start,json=start,proto3" json:"Start,omitempty"`                             // Дата начала работы
	Stop           *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=Stop,json=stop,proto3,oneof" json:"Stop,omitempty"`                          // Дата окончания работы
	UserID         *int64                 `protobuf:"varint,21,opt,name=UserID,json=user_id,proto3,oneof" json:"UserID,omitempty"`                  // ID пользователя
	UserName       *string                `protobuf:"bytes,24,opt,name=UserName,json=user_name,proto3,oneof" json:"UserName,omitempty"`             // Имя пользователя
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,27,opt,name=CreatedAt,json=created_at,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,30,opt,name=UpdatedAt,json=updated_at,proto3" json:"UpdatedAt,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Employee) Reset() {
	*x = Employee{}
	mi := &file_counterparty_employee_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Employee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Employee) ProtoMessage() {}

func (x *Employee) ProtoReflect() protoreflect.Message {
	mi := &file_counterparty_employee_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Employee.ProtoReflect.Descriptor instead.
func (*Employee) Descriptor() ([]byte, []int) {
	return file_counterparty_employee_proto_rawDescGZIP(), []int{1}
}

func (x *Employee) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Employee) GetCounterpartyID() int64 {
	if x != nil {
		return x.CounterpartyID
	}
	return 0
}

func (x *Employee) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *Employee) GetPositionType() string {
	if x != nil {
		return x.PositionType
	}
	return ""
}

func (x *Employee) GetContourType() string {
	if x != nil {
		return x.ContourType
	}
	return ""
}

func (x *Employee) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Employee) GetStop() *timestamppb.Timestamp {
	if x != nil {
		return x.Stop
	}
	return nil
}

func (x *Employee) GetUserID() int64 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *Employee) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *Employee) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Employee) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type AddEmployeeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Position      string                 `protobuf:"bytes,3,opt,name=Position,json=position,proto3" json:"Position,omitempty"`
	PositionType  string                 `protobuf:"bytes,5,opt,name=PositionType,json=position_type,proto3" json:"PositionType,omitempty"`
	ContourType   string                 `protobuf:"bytes,7,opt,name=ContourType,json=contour_type,proto3" json:"ContourType,omitempty"`
	Start         *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=Start,json=start,proto3" json:"Start,omitempty"`
	Stop          *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=Stop,json=stop,proto3,oneof" json:"Stop,omitempty"`
	UserID        *int64                 `protobuf:"varint,13,opt,name=UserID,json=user_id,proto3,oneof" json:"UserID,omitempty"`
	UserName      *string                `protobuf:"bytes,15,opt,name=UserName,json=user_name,proto3,oneof" json:"UserName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddEmployeeRequest) Reset() {
	*x = AddEmployeeRequest{}
	mi := &file_counterparty_employee_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddEmployeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEmployeeRequest) ProtoMessage() {}

func (x *AddEmployeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_counterparty_employee_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEmployeeRequest.ProtoReflect.Descriptor instead.
func (*AddEmployeeRequest) Descriptor() ([]byte, []int) {
	return file_counterparty_employee_proto_rawDescGZIP(), []int{2}
}

func (x *AddEmployeeRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddEmployeeRequest) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *AddEmployeeRequest) GetPositionType() string {
	if x != nil {
		return x.PositionType
	}
	return ""
}

func (x *AddEmployeeRequest) GetContourType() string {
	if x != nil {
		return x.ContourType
	}
	return ""
}

func (x *AddEmployeeRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *AddEmployeeRequest) GetStop() *timestamppb.Timestamp {
	if x != nil {
		return x.Stop
	}
	return nil
}

func (x *AddEmployeeRequest) GetUserID() int64 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *AddEmployeeRequest) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

type UpdateEmployeesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Employees     []*Employee            `protobuf:"bytes,10,rep,name=employees,proto3" json:"employees,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEmployeesRequest) Reset() {
	*x = UpdateEmployeesRequest{}
	mi := &file_counterparty_employee_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEmployeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmployeesRequest) ProtoMessage() {}

func (x *UpdateEmployeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_counterparty_employee_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmployeesRequest.ProtoReflect.Descriptor instead.
func (*UpdateEmployeesRequest) Descriptor() ([]byte, []int) {
	return file_counterparty_employee_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateEmployeesRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateEmployeesRequest) GetEmployees() []*Employee {
	if x != nil {
		return x.Employees
	}
	return nil
}

type UserID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=id,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserID) Reset() {
	*x = UserID{}
	mi := &file_counterparty_employee_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserID) ProtoMessage() {}

func (x *UserID) ProtoReflect() protoreflect.Message {
	mi := &file_counterparty_employee_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserID.ProtoReflect.Descriptor instead.
func (*UserID) Descriptor() ([]byte, []int) {
	return file_counterparty_employee_proto_rawDescGZIP(), []int{4}
}

func (x *UserID) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

var File_counterparty_employee_proto protoreflect.FileDescriptor

var file_counterparty_employee_proto_rawDesc = string([]byte{
	0x0a, 0x1b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x65,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x59, 0x0a,
	0x11, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x09, 0x65,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x22, 0xf9, 0x03, 0x0a, 0x08, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x12, 0x22, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x12, 0x92, 0x41, 0x0c, 0x9a, 0x02, 0x01, 0x03, 0xa2, 0x02, 0x05, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0xe0, 0x41, 0x02, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x6f, 0x75, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x75,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x48, 0x00, 0x52, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x53, 0x74, 0x6f, 0x70, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe4, 0x02, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x45, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x12, 0x92, 0x41, 0x0c, 0x9a, 0x02, 0x01, 0x03,
	0xa2, 0x02, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0xe0, 0x41, 0x02, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0c, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x6f, 0x75, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x75, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48,
	0x00, 0x52, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x53,
	0x74, 0x6f, 0x70, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x72, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x12, 0x92, 0x41, 0x0c, 0x9a, 0x02, 0x01, 0x03, 0xa2, 0x02, 0x05, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0xe0, 0x41, 0x02, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x52, 0x09, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x22,
	0x31, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x12, 0x92, 0x41, 0x0c, 0x9a,
	0x02, 0x01, 0x03, 0xa2, 0x02, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0xe0, 0x41, 0x02, 0x52, 0x02,
	0x69, 0x64, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x53, 0x4f, 0x54, 0x42, 0x49, 0x2d, 0x4c, 0x4c, 0x43, 0x2f, 0x73, 0x6f, 0x74, 0x62, 0x69,
	0x2e, 0x6c, 0x69, 0x62, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	file_counterparty_employee_proto_rawDescOnce sync.Once
	file_counterparty_employee_proto_rawDescData []byte
)

func file_counterparty_employee_proto_rawDescGZIP() []byte {
	file_counterparty_employee_proto_rawDescOnce.Do(func() {
		file_counterparty_employee_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_counterparty_employee_proto_rawDesc), len(file_counterparty_employee_proto_rawDesc)))
	})
	return file_counterparty_employee_proto_rawDescData
}

var file_counterparty_employee_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_counterparty_employee_proto_goTypes = []any{
	(*EmployeesResponse)(nil),      // 0: counterparty.EmployeesResponse
	(*Employee)(nil),               // 1: counterparty.Employee
	(*AddEmployeeRequest)(nil),     // 2: counterparty.AddEmployeeRequest
	(*UpdateEmployeesRequest)(nil), // 3: counterparty.UpdateEmployeesRequest
	(*UserID)(nil),                 // 4: counterparty.UserID
	(*timestamppb.Timestamp)(nil),  // 5: google.protobuf.Timestamp
}
var file_counterparty_employee_proto_depIdxs = []int32{
	1, // 0: counterparty.EmployeesResponse.employees:type_name -> counterparty.Employee
	5, // 1: counterparty.Employee.Start:type_name -> google.protobuf.Timestamp
	5, // 2: counterparty.Employee.Stop:type_name -> google.protobuf.Timestamp
	5, // 3: counterparty.Employee.CreatedAt:type_name -> google.protobuf.Timestamp
	5, // 4: counterparty.Employee.UpdatedAt:type_name -> google.protobuf.Timestamp
	5, // 5: counterparty.AddEmployeeRequest.Start:type_name -> google.protobuf.Timestamp
	5, // 6: counterparty.AddEmployeeRequest.Stop:type_name -> google.protobuf.Timestamp
	1, // 7: counterparty.UpdateEmployeesRequest.employees:type_name -> counterparty.Employee
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_counterparty_employee_proto_init() }
func file_counterparty_employee_proto_init() {
	if File_counterparty_employee_proto != nil {
		return
	}
	file_counterparty_employee_proto_msgTypes[1].OneofWrappers = []any{}
	file_counterparty_employee_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_counterparty_employee_proto_rawDesc), len(file_counterparty_employee_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_counterparty_employee_proto_goTypes,
		DependencyIndexes: file_counterparty_employee_proto_depIdxs,
		MessageInfos:      file_counterparty_employee_proto_msgTypes,
	}.Build()
	File_counterparty_employee_proto = out.File
	file_counterparty_employee_proto_goTypes = nil
	file_counterparty_employee_proto_depIdxs = nil
}
